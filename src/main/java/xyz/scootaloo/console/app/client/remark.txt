date: 2021/3/2
time: 9:33

支持多线程的可能性

目前框架运行在单线程环境是没有问题的，但是当处于多线线程环境中时，多个线程访问解释器对象，会造成一些逻辑的错乱。
目前框架使用静态类来管理一些公共的资源，比如方法执行器，以及其他一些功能接口的实现，然后提供静态方法做为api来操作这些资源。

多线程的问题在于以下几点:
    当有两个以上线程访问解释器对象时
    - 由于解释器中使用了静态属性来管理一条线程的命令执行状态，所以两个线程在同时输入命令时，会相互影响，而得不到正确结果。
            - 主要影响体现在，过滤器(需要当前输入的命令行做为参数)
            - 问题: 使用静态属性不能区分开两个线程
    - 后台任务功能: 由一个全局的HashMap管理，任何一个线程提交的任务，对于其他线程都可见。
    - 变量管理器: 问题与后台任务功能一致


---------------
date: 2021/3/31

现在的实现是, 通过一个用户对象, 来区别不同用户的资源, 每当用户被创建, 就给这个用户分配资源, 这个用户的所有操作都是针对自己资源的操作
而自己的资源不会被其他用户访问.
由于用户对象是ThreadLocal的, 所以每个线程的操作都不会相互干扰.
